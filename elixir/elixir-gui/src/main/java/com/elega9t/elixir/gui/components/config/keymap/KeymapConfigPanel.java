package com.elega9t.elixir.gui.components.config.keymap;

import com.elega9t.commons.swing.config.ConfigPanel;
import com.elega9t.elixir.gui.mgr.ElixirKeymapKey;
import com.elega9t.elixir.gui.mgr.KeymapManager;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import java.util.Map;

public class KeymapConfigPanel extends ConfigPanel {

    private DefaultMutableTreeNode keymapTreeRootNode = new DefaultMutableTreeNode("Keymap");
    
    /**
     * Creates new form KeymapConfigPanel
     */
    public KeymapConfigPanel() {
        super("Keymap");
        initComponents();
        initKeymapTree();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        detailsPanel = new javax.swing.JPanel();
        keymapPanel = new javax.swing.JPanel();
        keymapTreeScrollPane = new javax.swing.JScrollPane();
        keymapTree = new javax.swing.JTree(keymapTreeRootNode);

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(new java.awt.BorderLayout());

        org.jdesktop.layout.GroupLayout detailsPanelLayout = new org.jdesktop.layout.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 396, Short.MAX_VALUE)
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        add(detailsPanel, java.awt.BorderLayout.PAGE_START);

        keymapPanel.setLayout(new java.awt.BorderLayout());

        keymapTree.setRootVisible(false);
        keymapTreeScrollPane.setViewportView(keymapTree);

        keymapPanel.add(keymapTreeScrollPane, java.awt.BorderLayout.CENTER);

        add(keymapPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JPanel keymapPanel;
    private javax.swing.JTree keymapTree;
    private javax.swing.JScrollPane keymapTreeScrollPane;
    // End of variables declaration//GEN-END:variables

    private void initKeymapTree() {
        final KeymapManager keymapManager = KeymapManager.getInstance();
        keymapTreeRootNode.removeAllChildren();
        final DefaultMutableTreeNode editor = new DefaultMutableTreeNode("Editor");
        keymapTreeRootNode.add(editor);
        final Map<ElixirKeymapKey,KeyStroke> keymaps = keymapManager.editor.keymaps();
        for (ElixirKeymapKey elixirKeymapKey : keymaps.keySet()) {
            editor.add(new DefaultMutableTreeNode(elixirKeymapKey.getDisplay()));
        }
        keymapTree.updateUI();
    }
    
}
